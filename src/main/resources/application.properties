# Porta de acesso
server.port=8081

# profile
spring.profiles.active=${ACTIVEPROFILE:dev}

# datasource
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=${MYSQL_HOST:jdbc:mysql://localhost:3306/transacoes?createDatabaseIfNotExist=true&useTimezone=true&serverTimezone=America/Sao_Paulo}
spring.datasource.username=root
spring.datasource.password=Root@12345

# jpa
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update

# Endereço do Kafka
spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost:9092}

# Formato da chave (String) recebida!
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Formato da mensagem \\ evento (JSON) recebida(o)!
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Identificador do grupo de consumo
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:eventoDeTransacao}

# Modelo de coleta do consumidor (latest, earliest, none)
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}

# Identificador do tópico de transações
spring.kafka.topic.transactions=${KAFKA_TOPIC_TRANSACOES:transacoes}

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}
